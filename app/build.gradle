plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        namespace "io.github.livenlearnaday.countrylistkotlin"
        applicationId "io.github.livenlearnaday.countrylistkotlin"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "io.github.livenlearnaday.countrylistkotlin.CustomTestRunner"
    }

    buildFeatures {
        viewBinding true
        dataBinding true

    }

    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }


    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDirs += sharedTestDir
        }
        androidTest {
            java.srcDirs += sharedTestDir
        }
    }


    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    packagingOptions {
        resources {
            excludes += ['/META-INF/AL2.0', '/META-INF/LGPL2.1']
        }
    }

    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
        }
    }
    defaultConfig {
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    namespace 'io.github.livenlearnaday.countrylistkotlin'

}

kapt {
    arguments {
        // Make Hilt share the same definition of Components in tests instead of
        // creating a new set of Components per test class.
        arg("dagger.hilt.shareTestComponents", "true")
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation "androidx.core:core-ktx:$androidxCoreKtxVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.annotation:annotation:$annotationVersion"


//lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewmodel"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleLivedata"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleCommon"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleRuntime"


    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "com.google.android.material:material:$androidMaterialVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"


    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"


    // Needed to fix a dependency conflict with FirebaseUI'
    implementation 'androidx.arch.core:core-runtime:2.1.0'


    //Timber logging
    implementation "com.jakewharton.timber:timber:$timberLoggingVersion"

    // database
    implementation "androidx.room:room-rxjava2:$roomDatabaseVersion"
    implementation "androidx.room:room-runtime:$roomDatabaseVersion"
    implementation "androidx.room:room-ktx:$roomDatabaseVersion"
    kapt "androidx.room:room-compiler:$roomDatabaseVersion"


    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidxCoreKtxVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidxCoreKtxVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomDatabaseVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"

// retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$gsonRetrofitVersion"
    implementation "com.google.code.gson:gson:$gsonGoogleVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptorVersion"

    //Glide
    implementation("com.github.bumptech.glide:glide:${glideVersion}") {
        exclude group: "com.android.support"
    }
    kapt "com.github.bumptech.glide:compiler:${glideVersion}"
    //svg image handling
    implementation 'com.github.corouteam:GlideToVectorYou:v2.0.0'


    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltAndroidVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModelVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltAndroidCompilerVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltCompilerVersion"



    //Hilt Testing
    // For Robolectric tests
    testImplementation "com.google.dagger:hilt-android-testing:$hiltAndroidVersion"
    // hilt testing
    kaptTest "com.google.dagger:hilt-android-compiler:$hiltAndroidVersion"
    // For instrumented tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltAndroidVersion"
    // hilt testing
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltAndroidVersion"


}

kapt {
    correctErrorTypes true
}